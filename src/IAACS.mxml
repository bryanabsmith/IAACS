<?xml version="1.0" encoding="utf-8"?>
<s:ViewNavigatorApplication xmlns:fx="http://ns.adobe.com/mxml/2009" splashScreenImage="@Embed('Default-568h@2x.png')" splashScreenScaleMode="zoom"
							xmlns:s="library://ns.adobe.com/flex/spark" applicationDPI="320" firstView="{loadProperView()}">
	
	<fx:Style>
		
		@namespace s "library://ns.adobe.com/flex/spark";
		
		@font-face { 
			src: url("fonts/FiraSans.otf"); 
			fontFamily: Fira; 
			embedAsCFF: true;
		}
		
		@font-face { 
			src: url("fonts/FiraSans-Italic.otf"); 
			fontFamily: FiraItalic; 
			embedAsCFF: true;
		}
		
		s|Application {
			fontFamily: Fira;
		}
		
		@media (application-dpi: 320) AND (os-platform:"IOS") AND (min-os-version: 7) 
		{ 
			s|Application { 
				osStatusBarHeight: 0;
			}
		}
		
		s|Label
		{
			percentWidth: 100;
		}
		
		s|TextInput
		{
			skinClass: ClassReference("spark.skins.mobile.TextInputSkin");
			/* 
			- http://stackoverflow.com/questions/10913156/flex-4-6-textinput-with-prompt-on-ios-misbehaves
			- iOS fix for the autoselection of text
			*/
			showPromptWhenFocused: false; 
			
			borderVisible: false;
			contentBackgroundColor: #FFFFFF;
			focusAlpha: 0;
			focusColor: #FFFFFF;
		}
		
		s|TextArea
		{
			skinClass: ClassReference("spark.skins.mobile.TextAreaSkin");
			/* 
			- http://stackoverflow.com/questions/10913156/flex-4-6-textinput-with-prompt-on-ios-misbehaves
			- iOS fix for the autoselection of text
			*/
			showPromptWhenFocused: false; 
			
			borderVisible: false;
			contentBackgroundColor: #FFFFFF;
			focusAlpha: 0;
			focusColor: #FFFFFF;
		}
		
		.title {
			font-size: 40;
		}
		
		.desc {
			font-size: 32;
		}
		
		.example {
			font-size: 20;
			fontFamily: FiraItalic;
			color: #C0C0C0;
		}

		.backgroundActionBarTitle {
			color: #801332;
		}
		
	</fx:Style>

	<fx:Script>
		<![CDATA[
			import views.TabletNav;
			import views.Home;
			
			public var newsViewed:Boolean = false;
			
			private function loadProperView():Class {
				// http://forum.starling-framework.org/topic/detect-device-type-phone-tablet
				var w:Number = Capabilities.screenResolutionX;
				var h:Number = Capabilities.screenResolutionY;
				var dpi:Number = Capabilities.screenDPI;
				
				//trace(NativeApplication.nativeApplication.runtimeVersion);
				
				var screenInches:Number = Math.round(Math.sqrt(Math.pow(w/dpi,2)+Math.pow(h/dpi,2)) * 100) / 100;

				// iPad Mini is 7.9 inches
				if (screenInches > 6) {
					return views.TabletNav;
				}
				return views.Home;
			}
		]]>
	</fx:Script>
</s:ViewNavigatorApplication>
