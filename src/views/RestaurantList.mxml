<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" creationComplete="view1_creationCompleteHandler(event)"
		xmlns:s="library://ns.adobe.com/flex/spark" title="Home" actionBarVisible="false">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import mx.graphics.SolidColorStroke;
			
			import spark.managers.PersistenceManager;
			import spark.primitives.Line;
			
			import air.net.URLMonitor;
			
			//import com.mesmotronic.ane.AndroidFullScreen;
			
			[Embed(source="../res/program.png")] 
			[Bindable] 
			public var imgProgram:Class;
			
			[Embed(source="../res/restaurant.png")] 
			[Bindable] 
			public var imgRestaurant:Class;
			
			[Bindable]
			private var titleFontSize:int;
			
			[Bindable]
			private var descFontSize:int;
			
			private var urlMonitor:URLMonitor;
			
			private var p:PersistenceManager = new PersistenceManager();
			
			private var url:String = "http://bryanabsmith.com/iaacs/app/restaurant_list.xml";
			
			private var callTitle:String = "";
			private var webTitle:String = "";
			
			protected function view1_creationCompleteHandler(event:FlexEvent):void
			{
				trace(Capabilities.os.substring(0,2));
				if (Capabilities.os.substring(0,2) == "iP") { // iPhone, iPad and iPod Touch padding at the top
					hGroupActionBarContents.paddingTop = 40;
					vGroupNoConnection.paddingTop = 40;
				} else {
					hGroupActionBarContents.paddingTop = 0;
				}
				
				var colourScheme:String = p.getProperty("colourScheme") as String;
				var colourSchemeLabel:String = p.getProperty("colourSchemeLabel") as String;
				
				/*if (colourScheme == null) {
				backgroundActionBarTitle.color = 0x33B5E5;
				labelActionBarTitle.setStyle("color", 0xFFFFFF);
				} else {
				backgroundActionBarTitle.color = uint(colourScheme);
				labelActionBarTitle.setStyle("color", colourSchemeLabel);
				}*/
				
				/*var fontSize:String = p.getProperty("fontSize") as String;
				if (fontSize == null) {
				titleFontSize = 28;
				descFontSize = int(titleFontSize)-8;
				} else {
				titleFontSize = int(fontSize);
				descFontSize = int(titleFontSize)-8;
				}*/
				
				/*if (AndroidFullScreen.isSupported) {
				AndroidFullScreen.showUnderSystemUI();
				hGroupActionBarContents.paddingTop = 30;
				}*/
				
				var urlRequest:URLRequest = new URLRequest("http://www.bryanabsmith.com");
				urlMonitor = new URLMonitor(urlRequest);
				urlMonitor.addEventListener(StatusEvent.STATUS, onStatusEvent);
				urlMonitor.start();
				
				// http://forum.starling-framework.org/topic/detect-device-type-phone-tablet
				var w:Number = Capabilities.screenResolutionX;
				var h:Number = Capabilities.screenResolutionY;
				var dpi:Number = Capabilities.screenDPI;
				
				var screenInches:Number = Math.round(Math.sqrt(Math.pow(w/dpi,2)+Math.pow(h/dpi,2)) * 100) / 100;
				
				var languageURL:URLRequest;
				var selectedLanguage:String = p.getProperty("language") as String;
				if (selectedLanguage == "fr") {
					languageURL = new URLRequest("../res/translations/fr.xml");
				} else {
					languageURL = new URLRequest("../res/translations/en.xml");
				}
				
				var licenceLoader:URLLoader = new URLLoader();
				licenceLoader.addEventListener(Event.COMPLETE, displayText);
				licenceLoader.load(languageURL);
				
				function displayText(event:Event):void {
					var fileContents:XML = new XML(event.currentTarget.data);
					for (var item:String in fileContents.restaurants) {
						labelActionBarTitle.text = "\u2190 " + fileContents.restaurants.@title[item];
						callTitle = fileContents.restaurants.@callTitle[item];
						webTitle = fileContents.restaurants.@webTitle[item];
					}
				}
				
				/*if (screenInches > 7.5) {
					labelActionBarTitle.setStyle("paddingTop", "35");
					labelActionBarTitle.setStyle("paddingBottom", "35");
				}*/
			}
			
			private function onStatusEvent(event:StatusEvent):void
			{
				var evt:StatusEvent = event;
				if (evt.code == "Service.available") {
					groupNetworkError.visible = false;
					groupNetworkError.includeInLayout = false;
					mainScroller.enabled = true;
					
					var myLoader:URLLoader = new URLLoader();
					myLoader.addEventListener(Event.COMPLETE, showRestaurantList);
					myLoader.load(new URLRequest(url));
				} else {
					groupNetworkError.visible = true;
					groupNetworkError.includeInLayout = true;
					mainScroller.enabled = false;
				}
			}
			
			protected function showRestaurantList(event:Event):void
			{
				var fileContents:XML = new XML(event.currentTarget.data);
				var count:int = 0;
				var records:Array = [];
				var urls:Array = [];
				
				var rName:String = "";
				var rAddress:String = "";
				var rPrice:String = "";
				var rCuisine:String = "";
				var rCoord:Array = [];
				var rNumber:String = "";
				var rURL:String = "";
				
				for (var item:String in fileContents.item) {
					
					rName = fileContents.item.@name[item];
					rAddress = fileContents.item.@address[item];
					rPrice = fileContents.item.@price[item];
					rCuisine = fileContents.item.@cuisine[item];
					rCoord = [fileContents.item.@lat[item], fileContents.item.@long[item]];
					rNumber = fileContents.item.@number[item];
					rURL = fileContents.item.@url[item];
					
					var groupRestaurantCard:Group = new Group();
					var restaurantRect:Rect = new Rect();
					var restaurantStrokeColour:SolidColorStroke = new SolidColorStroke();
					var restaurantFill:SolidColor = new SolidColor();
					var restaurantLineColour:SolidColorStroke = new SolidColorStroke();
					var restaurantLine:Line = new Line();
					var vGroupRestaurant:VGroup = new VGroup();
					var vGroupInfo:VGroup = new VGroup();
					var bottomSpacer:Spacer = new Spacer();
					
					var name:Label = new Label();
					var address:Label = new Label();
					var details:Label = new Label();
					var call:Label = new Label();
					var web:Label = new Label();
					
					groupRestaurantCard.percentWidth = 100;
					//groupBookCard.percentHeight = 10;
					
					restaurantRect.percentWidth = 100;
					restaurantRect.percentHeight = 100;							
					
					restaurantStrokeColour.color = 0xFFFFFF;
					restaurantStrokeColour.weight = 2;
					restaurantRect.stroke = restaurantStrokeColour;
					
					restaurantFill.color = 0xFFFFFF;
					restaurantRect.fill = restaurantFill;
					
					groupRestaurantCard.addElement(restaurantRect);
					
					restaurantLine.percentWidth = 100;
					restaurantLineColour.color = 0xB0B0B0;
					restaurantLineColour.weight = 2;
					restaurantLine.stroke = restaurantLineColour;
					
					records[count] = new HGroup();
					// http://stackoverflow.com/a/1046147
					records[count].percentWidth = 100;
					records[count].verticalAlign = "middle";
					
					vGroupRestaurant.percentWidth = 100;
					//vGroupRestaurant.height = 120;
					vGroupRestaurant.paddingTop = 10;
					vGroupRestaurant.paddingBottom = 10;
					vGroupRestaurant.paddingLeft = 10;
					vGroupRestaurant.paddingRight = 10;
					
					name.text = rName;
					name.percentWidth = 100;
					name.setStyle("styleName", "title");
					name.toolTip = rCoord[0];
					name.id = rCoord[1];
					name.errorString = rName;
					
					address.text = rAddress;
					address.percentWidth = 100;
					address.setStyle("styleName", "desc");
					address.toolTip = rCoord[0];
					address.id = rCoord[1];
					address.errorString = rName;
					
					details.text = rCuisine + " (" + rPrice + ")";
					details.percentWidth = 100;
					details.setStyle("styleName", "desc");
					details.toolTip = rCoord[0];
					details.id = rCoord[1];
					details.errorString = rName;
					
					vGroupRestaurant.addElement(name);
					vGroupRestaurant.addElement(address);
					vGroupRestaurant.addElement(details);

					records[count].addElement(vGroupRestaurant);
					
					//vGroupInfo.percentWidth = 100;
					//vGroupRestaurant.height = 120;
					vGroupInfo.paddingTop = 10;
					vGroupInfo.paddingBottom = 10;
					vGroupInfo.paddingLeft = 10;
					vGroupInfo.paddingRight = 10;
					
					call.text = callTitle;
					//call.percentWidth = 100;
					call.setStyle("paddingRight", "10");
					call.setStyle("styleName", "title");
					call.setStyle("color", "#801332");
					call.toolTip = rNumber;
					
					web.text = webTitle;
					//call.percentWidth = 100;
					web.setStyle("paddingRight", "10");
					web.setStyle("styleName", "title");
					web.setStyle("color", "#0645AD");
					web.toolTip = rURL;
					
					vGroupInfo.addElement(call);
					vGroupInfo.addElement(web);
					records[count].addElement(vGroupInfo);
					
					groupRestaurantCard.addElement(records[count]);
					vGroupContent.addElement(groupRestaurantCard);
					vGroupContent.addElement(restaurantLine);
					
					name.addEventListener(MouseEvent.CLICK, onClickRestaurant);
					address.addEventListener(MouseEvent.CLICK, onClickRestaurant);
					details.addEventListener(MouseEvent.CLICK, onClickRestaurant);
					call.addEventListener(MouseEvent.CLICK, onClickCall);
					web.addEventListener(MouseEvent.CLICK, onClickWeb);
					//groupRestaurantCard.addEventListener(MouseEvent.CLICK, onClickRestaurant);
					/*author.addEventListener(MouseEvent.CLICK, onClickRestaurant);
					subjectGrade.addEventListener(MouseEvent.CLICK, onClickRestaurant);
					stats.addEventListener(MouseEvent.CLICK, onClickRestaurant);*/
					
					bottomSpacer.height = 10;
					bottomSpacer.percentWidth = 100;
					
					vGroupContent.addElement(bottomSpacer);
					count++;
				}
				loadingRes.visible = false;
				loadingRes.includeInLayout = false;
			}
			
			// http://stackoverflow.com/a/14762479/2363223
			protected function onClickRestaurant(e:MouseEvent):void {
				if (e.target is Label) {
					var coords:Label = e.target as Label;
					navigator.pushView(RestaurantMap, [coords.toolTip, coords.id, coords.errorString]);
				}
			}
			
			// http://stackoverflow.com/a/14762479/2363223
			protected function onClickCall(e:MouseEvent):void {
				if (e.target is Label) {
					var number:Label = e.target as Label;
					trace(number.toolTip);
					navigateToURL(new URLRequest("tel:" + number.toolTip)); // http://www.adobe.com/devnet/flex/testdrivemobile/articles/mtd_2_1.html
				}
			}
			
			// http://stackoverflow.com/a/14762479/2363223
			protected function onClickWeb(e:MouseEvent):void {
				if (e.target is Label) {
					var web:Label = e.target as Label;
					trace(web.toolTip);
					navigateToURL(new URLRequest(web.toolTip));
				}
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:SlideViewTransition id="slideTransition" duration="300" direction="up" transitionControlsWithContent="false"/>
	</fx:Declarations>
	
	<s:VGroup id="vGroupMain" height="100%" width="100%" gap="0"> 
		<s:Group id="groupActionBarTitle" width="100%">
			<s:Rect width="100%" height="100%">
				<s:fill><s:SolidColor id="backgroundActionBarTitle" color="#801332"/></s:fill>
			</s:Rect>
			<s:HGroup id="hGroupActionBarContents" width="100%" verticalAlign="middle" height="100%" paddingLeft="10" paddingRight="10">
				<s:Label id="labelActionBarTitle" maxDisplayedLines="1" text="&#8592; Restaurants" color="#FFFFFF" styleName="title" paddingTop="20" paddingBottom="20" click="navigator.popToFirstView();"/>
				<s:Spacer width="100%"/>
				<s:BusyIndicator id="loadingRes" symbolColor="#FFFFFF"/>
			</s:HGroup>
		</s:Group>
		
		<!-- http://help.adobe.com/en_US/flex/using/WS422719A4-7849-4921-AF39-57FF567B483B.html#WS063B0491-B7AB-4b00-A39F-E44310BCB0E0 -->
		<!--<s:SkinnableContainer id="backgroundContainer" height="100%" width="100%" skinClass="skins.BackPic">-->
		
		<s:VGroup id="vGroupBackground" width="100%" height="100%" gap="0">
			
			<s:Group id="groupBackground" width="100%" height="100%">
				
				<s:Rect width="100%" height="100%">
					<!--<s:stroke>
					<s:SolidColorStroke id="colourActionBarTitleBorder" color="#000000" weight="2" />
					</s:stroke>-->
					<s:fill><s:SolidColor id="backgroundBackground" color="#E8E8E8"/></s:fill>
				</s:Rect>
				
				<s:Scroller id="mainScroller" width="100%" height="100%">
					
					<s:VGroup id="vGroupContent" height="100%" width="100%" gap="0" paddingRight="20" paddingLeft="20" paddingTop="20" paddingBottom="20">
						
						
						
					</s:VGroup>
					
				</s:Scroller>
				
			</s:Group>
			
		</s:VGroup>
				
	</s:VGroup>
	
	<s:VGroup width="100%" height="100%">
		<s:Group id="groupNetworkError" width="100%" visible="false" includeInLayout="false" depth="2">
			<!-- http://flexponential.com/2009/11/23/adding-a-background-color-to-a-spark-group/ --> 
			<s:Rect width="100%" height="100%">
				<s:fill><s:SolidColor color="#B80000" alpha="0.9"/></s:fill>
			</s:Rect>
			<s:VGroup id="vGroupNoConnection" paddingBottom="10" paddingLeft="10" paddingRight="10" width="100%">
				<s:Spacer id="spacerNetworkTop" width="10" height="10"/>
				<s:HGroup id="hGroupConnectionProblem" width="100%">
					<s:Label id="labelNetworkError" height="100%" width="100%" color="#FFFFFF"
							 text="No network connection." verticalAlign="middle" textAlign="center"/>
				</s:HGroup>
				<s:Spacer id="spacerNetworkBottom" width="10" height="10"/>
			</s:VGroup>
		</s:Group>
	</s:VGroup>
	
</s:View>
